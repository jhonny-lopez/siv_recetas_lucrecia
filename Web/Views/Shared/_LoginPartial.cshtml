@using Microsoft.AspNetCore.Identity
@using Web.Areas.Identity.Data

@inject SignInManager<MyIdentityUser> SignInManager
@inject UserManager<MyIdentityUser> UserManager

@{ 
    var user = await UserManager.FindByNameAsync(User.Identity.Name ?? "");
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            Hola, @(user.DisplayName)!
            @if (!string.IsNullOrEmpty(user.Image))
            {
                <img src="data:image/png;base64, @user.Image" style="max-height: 100px; width:auto" alt="@user.DisplayName" />
            }
        </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Cerrar sesión</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Iniciar sesión</a>
    </li>
}
</ul>
